@use "@styles/_variables.scss" as *;
@use "@styles/_mixins.scss" as *;
@use "@styles/_media.scss" as *;

.root {
  @include flex-container(column);

  gap: var(--space-xs);
}

.fullWidth {
  width: 100%;
}

.isDisabled {
  opacity: var(--opacity-disabled);
  pointer-events: none;
}

.label {
  @include flex-container(row, flex-start, center);

  gap: var(--space-xs);
  margin-bottom: var(--space-xs);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  line-height: 1.4;
  color: var(--color-text-primary);

  @include respond-to('mobile') {
    font-size: var(--font-size-xs);
  }
}

.requiredIndicator {
  font-weight: var(--font-weight-bold);
  color: var(--color-error);
}

.inputWrapper {
  @include flex-container(row, flex-start, center);
  @include reset-mobile-interactions;

  position: relative;
  border-radius: var(--radius-md);
  transition: var(--transition-normal);

  &:focus-within {
    outline: var(--outline-width) solid var(--color-border-focus);
    outline-offset: calc(var(--outline-offset) * -1);
  }
}

.variant {
  &__outlined {
    background-color: var(--color-surface-primary);
    border: 1px solid var(--color-border-primary);

    &:hover:not(.state__disabled) {
      border-color: var(--color-border-focus);
    }

    &.state__error {
      border-color: var(--color-error);
    }

    &.state__disabled {
      background-color: var(--color-background-secondary);
      border-color: var(--color-border-secondary);
    }
  }

  &__filled {
    background-color: var(--color-background-secondary);
    border: 1px solid transparent;

    &:focus-within {
      background-color: var(--color-surface-primary);
      border-color: var(--color-border-focus);
    }

    &:hover:not(.state__disabled) {
      background-color: var(--color-background-tertiary);
    }

    &.state__error {
      background-color: var(--color-error-background);
      border-color: var(--color-error);
    }

    &.state__disabled {
      background-color: var(--color-background-tertiary);
    }
  }
}

.input {
  flex: 1;
  width: 100%;
  font-family: var(--font-family-primary);
  line-height: 1.4;
  color: var(--color-text-primary);
  background: transparent;
  border: none;
  outline: none;
  padding-inline: var(--space-sm);

  &::placeholder {
    color: var(--color-text-muted);
  }

  &:disabled {
    color: var(--color-text-muted);
    cursor: not-allowed;
  }

  &:-webkit-autofill {
    box-shadow: 0 0 0 1000px var(--color-surface-primary) inset;
    -webkit-text-fill-color: var(--color-text-primary);
  }
}

.size {
  &__small {
    min-height: var(--size-xs);
    max-height: calc(var(--size-xs) + var(--space-s));
    padding: var(--space-xs);

    .input {
      height: calc(var(--size-xs) + var(--space-s) - var(--space-1));
      font-size: var(--font-size-xs);
    }

    .leading {
      height: calc(var(--size-xs) + var(--space-s) - var(--space-1));
      margin-inline-start: calc(0px - var(--space-xs));
      padding-inline: calc(var(--space-s) + var(--space-1));
    }

    .trailing {
      height: calc(var(--size-xs) + var(--space-s) - var(--space-1));
      margin-inline-end: calc(0px - var(--space-xs));
      padding-inline: calc(var(--space-s) + var(--space-1));
    }

    @include respond-to('mobile') {
      min-height: calc(var(--size-xs) - 4px);
      padding: 0 var(--space-xs);
    }
  }

  &__medium {
    min-height: var(--size-s);
    max-height: calc(var(--size-s) + var(--space-s));
    padding: var(--space-s) var(--space-xs);

    .input {
      height: calc(var(--size-s) + var(--space-s) - var(--space-1));
      font-size: var(--font-size-s);
    }

    .leading {
      height: calc(var(--size-s) + var(--space-s) - var(--space-1));
      margin-inline-start: calc(0px - var(--space-xs));
      padding-inline: calc(var(--space-s) + var(--space-1));
    }

    .trailing {
      height: calc(var(--size-s) + var(--space-s) - var(--space-1));
      margin-inline-end: calc(0px - var(--space-xs));
      padding-inline: calc(var(--space-s) + var(--space-1));
    }

    @include respond-to('mobile') {
      min-height: calc(var(--size-s) - 4px);
      padding: 0 var(--space-xs);
    }
  }

  &__large {
    min-height: var(--size-m);
    max-height: calc(var(--size-m) + var(--space-s));
    padding: var(--space-s) var(--space-xs);

    .input {
      height: calc(var(--size-m) + var(--space-s) - var(--space-1));
      font-size: var(--font-size-m);
    }

    .leading {
      height: calc(var(--size-m) + var(--space-s) - var(--space-1));
      margin-inline-start: calc(0px - var(--space-xs));
      padding-inline: calc(var(--space-s) + var(--space-1));
    }

    .trailing {
      height: calc(var(--size-m) + var(--space-s) - var(--space-1));
      margin-inline-end: calc(0px - var(--space-xs));
      padding-inline: calc(var(--space-s) + var(--space-1));
    }

    @include respond-to('mobile') {
      min-height: calc(var(--size-m) - 4px);
      padding: 0 var(--space-s);
    }
  }
}

.state {
  &__disabled {
    cursor: not-allowed;
  }
}

.leading,
.trailing {
  @include flex-center;

  position: relative;
  z-index: var(--z-index-1);
  color: var(--color-text-muted);
}

.leading {
  border-inline-end: 1px solid var(--color-border);
}

.trailing {
  border-inline-start: 1px solid var(--color-border);
}

.loading {
  @include mobile-optimized-animation(spin 1s linear infinite);
}

.helperText {
  @include flex-container(column);

  gap: var(--space-xxs);
  margin-top: var(--space-xs);
}

.helper,
.error {
  font-size: var(--font-size-xs);
  line-height: 1.4;

  @include respond-to('mobile') {
    font-size: var(--font-size-xxs);
  }
}

.helper {
  color: var(--color-text-muted);
}

.error {
  font-weight: var(--font-weight-l);
  color: var(--color-danger);
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}