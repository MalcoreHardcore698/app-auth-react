@use "@styles/_variables.scss" as *;
@use "@styles/_mixins.scss" as *;
@use "@styles/_media.scss" as *;

.root {
  @include flex-center;
  @include reset-mobile-interactions;

  position: relative;
  gap: var(--space-s);
  font-family: var(--font-family);
  font-weight: var(--font-weight-l);
  line-height: 1.4;
  text-decoration: none;
  white-space: nowrap;
  border: none;
  border-radius: var(--border-radius-s);
  transition: var(--transition);
  cursor: pointer;

  &:focus-visible {
    outline: var(--outline-width) solid var(--color-primary);
    outline-offset: var(--outline-offset);
  }

  &:disabled {
    cursor: not-allowed;
  }
}

.variant {
  &__primary {
    color: var(--color-text-on-brand);
    background-color: var(--color-brand-primary);

    &:hover:not(:disabled) {
      background-color: var(--color-brand-primary-hover);
      transform: translateY(-1px);
    }

    &:active:not(:disabled) {
      background-color: var(--color-brand-primary-active);
      transform: translateY(0);
    }
  }

  &__secondary {
    color: var(--color-text-primary);
    background-color: var(--color-background-secondary);

    &:hover:not(:disabled) {
      background-color: var(--color-background-tertiary);
      transform: translateY(-1px);
    }

    &:active:not(:disabled) {
      background-color: var(--color-background-tertiary);
      transform: translateY(0);
    }
  }

  &__outline {
    color: var(--color-brand-primary);
    background-color: transparent;
    border: 1px solid var(--color-brand-primary);

    &:hover:not(:disabled) {
      color: var(--color-text-on-brand);
      background-color: var(--color-brand-primary);
      transform: translateY(-1px);
    }

    &:active:not(:disabled) {
      background-color: var(--color-brand-primary-active);
      transform: translateY(0);
    }
  }

  &__ghost {
    color: var(--color-text-primary);
    background-color: transparent;

    &:hover:not(:disabled) {
      background-color: var(--color-background-secondary);
      transform: translateY(-1px);
    }

    &:active:not(:disabled) {
      background-color: var(--color-background-tertiary);
      transform: translateY(0);
    }
  }

  &__danger {
    color: var(--color-text-on-brand);
    background-color: var(--color-error);

    &:hover:not(:disabled) {
      background-color: var(--color-error);
      transform: translateY(-1px);
      filter: brightness(0.9);
    }

    &:active:not(:disabled) {
      transform: translateY(0);
      filter: brightness(0.8);
    }
  }
}

.size {
  &__small {
    min-height: var(--size-xs);
    padding: var(--space-xs) var(--space-s);
    font-size: var(--font-size-s);

    @include respond-to('mobile') {
      min-height: calc(var(--size-xs) - 4px);
      padding: var(--space-xxs) var(--space-xs);
    }
  }

  &__medium {
    min-height: var(--size-s);
    padding: var(--space-s) var(--space-m);
    font-size: var(--font-size-m);

    @include respond-to('mobile') {
      min-height: calc(var(--size-s) - 4px);
      padding: var(--space-xs) var(--space-s);
    }
  }

  &__large {
    min-height: var(--size-m);
    padding: var(--space-s) var(--space-l);
    font-size: var(--font-size-l);

    @include respond-to('mobile') {
      min-height: calc(var(--size-m) - 4px);
      padding: var(--space-s) var(--space-m);
    }
  }
}

.state {
  &__loading {
    pointer-events: none;

    .content {
      opacity: var(--opacity-loading);
    }
  }

  &__disabled {
    opacity: var(--opacity-disabled);
    pointer-events: none;
  }
}

.fullWidth {
  width: 100%;
}

.clear {
  @include reset-button;
}

.spinner {
  display: flex;
  justify-content: center;
  align-items: center;
}

.icon {
  @include flex-center;

  svg {
    width: var(--space-m);
    height: var(--space-m);
  }
}

.content {
  @include flex-center;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}